name: Build and Publish Docker

on:
  workflow_call:
    inputs:
      vmImageName:
        required: true
        type: string
      containerRegistry:
        required: true
        type: string
      dockerfilePath:
        required: true
        type: string
      imageRepository:
        required: true
        type: string
      tag:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true

jobs:
  build_and_publish:
    runs-on: ${{ inputs.vmImageName }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure Container Registry Login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ inputs.containerRegistry }}
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
        
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
        
      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: backend/sardines

      #- name: Build Java project
      #  run: ./gradlew build
      #  working-directory: backend/sardines

      - name: Build Java project (skip tests)
        run: ./gradlew build -x test
        working-directory: backend/sardines

      - name: Build Docker image
        run: |
          docker build -f Dockerfile -t ${{ inputs.containerRegistry }}/${{ inputs.imageRepository }}:${{ inputs.tag }} .
        working-directory: backend/sardines

      - name: Push Docker image to ACR
        run: |
          docker push ${{ inputs.containerRegistry }}/${{ inputs.imageRepository }}:${{ inputs.tag }}

      - name: Save Docker image info
        run: echo "${{ inputs.containerRegistry }}/${{ inputs.imageRepository }}:${{ inputs.tag }}" > docker_image.txt

      - name: Upload Docker image info artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker_image-info
          path: docker_image.txt